{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setstate","hasEroor","React","Component","App","onSearchChange","event","console","log","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAYeA,EAVF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,MACrB,OACI,sBAAKC,UAAU,oDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,cACzB,gCACI,mCAAMD,KACN,kCAAKE,YCaFI,EAlBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAEI,cAAC,EAAD,CAEIV,GAAIM,EAAOI,GAAGV,GACdD,KAAMO,EAAOI,GAAGX,KAChBE,MAAOK,EAAOI,GAAGT,OAHZS,MAOjB,OACI,8BACGH,KCPII,EARG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,qBAAKX,UAAU,MAAf,SACC,uBAAOY,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCKrDI,EARA,SAACC,GACf,OACE,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,mBAAoBC,OAAO,SAAnE,SACKJ,EAAMK,YCiBCC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAO,CACRC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAMC,GACtBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WACI,OAAGG,KAAKJ,MAAMM,SACH,wCAEJF,KAAKX,MAAMK,a,GAhBCS,IAAMC,WC+ClBC,G,wDAxCX,aAAc,IAAD,8BACT,gBAcJC,eAAgB,SAACC,GACbC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAC3B,YAAYwB,EAAMI,OAAOC,SAfxC,EAAKhB,MAAM,CACPnB,OAAQ,GACRM,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACf8B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OACVA,EAASC,UACZF,MAAK,SAAAG,GAAU,EAAKP,SAAS,CAACjC,OAAOwC,S,oBAQ1C,WACI,MAA6BjB,KAAKJ,MAA3BnB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACTmC,EAAgBzC,EAAO0C,QAAO,SAAAC,GAChC,OAAOA,EAAMlD,KAAKmD,oBAAoBC,SAASvC,EAAYsC,wBAE/D,OAAQ5C,EAAO8C,OAEX,sBAAKlD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAYW,aAAcgB,KAAKM,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU7B,OAAQyC,WANhC,oD,GA3BQf,IAAMC,YCIToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.55419e46.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, id, email}) =>{\n    return(\n        <div className='bg-light-green dib brr3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n        <div>\n            <h2> {name}</h2>\n            <p> {email}</p>\n        </div></div>\n    )\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots})=>{\n    const cardComponent = robots.map((user, i) => {\n        return(\n\n            <Card \n                key={i} \n                id={robots[i].id} \n                name={robots[i].name} \n                email={robots[i].email}\n            />\n           )\n    })\n    return(\n        <div>\n          {cardComponent}\n        </div>\n    )\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield,searchChange}) =>{\n    return(\n        <div className='pa2'>\n         <input type='search' placeholder='search robots' onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n return(\n   <div style={{overflowY:'scroll', border:'10px solid green', height:'800px'}}>\n       {props.children}\n  </div>\n )\n};\n\nexport default Scroll;","import React from 'react';\n\nclass ErrorBoundry extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            hasError:false\n        }\n    }\n\n    componentDidCatch(error,info){  \n      this.setstate({hasError: true});\n}\n\n    render(){\n        if(this.state.hasEroor){\n            return <h1> oops </h1>;\n        }\n        return this.props.children\n    }\n\n}\nexport default ErrorBoundry;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox.js';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n\nclass App extends React.Component {\n    constructor(){\n        super()\n        this.state={\n            robots: [],\n            searchfield:''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response =>\n            response.json())\n        .then(users => {this.setState({robots:users})});\n    }\n\n    onSearchChange =(event)=>{\n        console.log(event);\n        this.setState({searchfield:event.target.value});\n\n    }\n    render(){\n        const {robots, searchfield}= this.state;\n        const filteredRobots= robots.filter(robot => {\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\n        })\n        return !robots.length?\n          <h1>Loading ......</h1>:\n            <div className='tc'>\n                <h1 className='f1'>Robofriends</h1>\n                <SearchBox  searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n               </Scroll>\n            </div>\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}